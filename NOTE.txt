thêm trong server
 -requireAuth.js trong until để bảo vệ api routes (dùng cho những chức năng cần đăng nhập)
    *cần thêm router.use(requireAuth) trên các dòng lệnh của các routes cần đăng nhập

 -userController.js, models/User.js và routes/user.js để admin đăng nhập và tạo tài khoản
 -.env để lưu các biến muốn bảo mật như
   +mongoURI
   +PORT
   +SECRET dùng cho token
  --> gọi bằng process.env.tên_biến 
 -trong PostController thêm scrape để chạy file scraper.py qua nodejs


                                          ***NEW***
- thêm trường role trong User.js

- làm addUser trong userController sẽ mặc định role là 'user'

- trong requireAuth.js:
  + req.user = await User.findOne({_id}).select('role'):
   Sử dụng _id để truy vấn cơ sở dữ liệu và lấy thông tin người dùng, chủ yếu là trường role.
   Gán thông tin người dùng (role) vào đối tượng req.user

- thêm update_user_role trong usercontroller



**************************   (UPDATE 29/11/2023)   **************************

- requireAuth.js đưa vào folder middleware


- trong models/Post bỏ đi trường id và thêm post_url


- trong models/User thêm các hàm:
   + change_pass: để đổi mật khẩu


- trong userController thêm các chức năng:
   + change_password: gọi change_pass để đổi mật khẩu



- trong routes/index có thêm:
   + const userRouter = require('./user')

   + app.use('/user',userRouter)


- trong routes/user có thêm:
   + const requireAuth = require('../app/util/requireAuth')

   + router.use(requireAuth): cần đăng nhập để tiếp tục
      router.post('/changepass', userController.change_password): để kiểm đổi mật khẩu tài khoản


- trong routes/post có thêm:
   + router.post('/sendmail',PostController.send_gmail): gửi mail

   + const requireAuth = require('../app/util/requireAuth')

   + router.use(requireAuth): cần đăng nhập để tiếp tục


- trong userController thêm:
   + send_mail: gửi mail

#LƯU Ý:
   - scrape trong PostController chưa có router, thêm nếu cần

************************** (UPDATE 29/11/2023)-END **************************